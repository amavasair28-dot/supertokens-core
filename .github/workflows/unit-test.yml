name: Unit Tests

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - master
      - "v[0-9]+.[0-9]+"
    tags:
      - "(dev-)?v[0-9]+.[0-9]+.[0-9]+"

jobs:
  dependency-branches:
    name: Dependency Branches
    runs-on: ubuntu-latest
    outputs:
      branches: ${{ steps.result.outputs.branches }}

    steps:
      - uses: actions/checkout@v4
      - uses: supertokens/get-core-dependencies-action@main
        id: result
        with:
          running-for: core

  test:
    name: Unit tests
    needs: dependency-branches
    strategy:
      fail-fast: false
      matrix:
        plugin:
          - sqlite
          - postgresql
          - mysql
          - mongodb
        chunk: [0, 1, 2, 3, 4]

    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 15.0.1
        uses: actions/setup-java@v2
        with:
          java-version: 15.0.1
          distribution: zulu
      - uses: actions/checkout@v2
        with:
          repository: supertokens/supertokens-root
          path: ./supertokens-root
          ref: master
      - uses: actions/checkout@v2
        with:
          path: ./supertokens-root/supertokens-core
      - uses: actions/checkout@v2
        with:
          repository: supertokens/supertokens-plugin-interface
          path: ./supertokens-root/supertokens-plugin-interface
          ref: ${{ fromJson(needs.dependency-branches.outputs.branches)['plugin-interface'] }}
      - uses: actions/checkout@v2
        if: matrix.plugin != 'sqlite'
        with:
          repository: supertokens/supertokens-${{ matrix.plugin }}-plugin
          path: ./supertokens-root/supertokens-${{ matrix.plugin }}-plugin
          ref: ${{ fromJson(needs.dependency-branches.outputs.branches)[matrix.plugin] }}
      - name: Load Modules
        run: |
          cd supertokens-root
          echo "core,master
          plugin-interface,master
          ${{ matrix.plugin }}-plugin,master
          " > modules.txt
          cat modules.txt
          ./loadModules
      - name: Setup test env
        run: cd supertokens-root && ./utils/setupTestEnv --local
      - name: Start ${{ matrix.plugin }} server
        if: matrix.plugin != 'sqlite'
        run: cd supertokens-root/supertokens-${{ matrix.plugin }}-plugin && ./startDb.sh
      - name: Run OAuth Provider
        run: cd supertokens-root && docker run -p 4444:4444 -p 4445:4445 -d --rm --name oauth-cicd rishabhpoddar/oauth-server-cicd && sleep 2
      - name: Discover test classes
        id: discover
        run: |
          cd supertokens-root
          find . -path "*/src/test/**/*.java" | sed 's/.*src\/test\/java\///' | sed 's/\.java$//' | sed 's/\//./g' > test_classes.txt
      - name: Determine tests for this worker
        run: |
          cd supertokens-root
          TOTAL_TESTS=$(wc -l < test_classes.txt)
          CHUNK_SIZE=$(( (TOTAL_TESTS + 4) / 5 ))
          START=$(( ${{ matrix.chunk }} * CHUNK_SIZE + 1 ))
          END=$(( START + CHUNK_SIZE - 1 ))
          CHUNK_TESTS=$(sed -n "${START},${END}p" test_classes.txt | tr '\n' ',' | sed 's/,$//')
          echo $CHUNK_TESTS
      - name: Run tests
        run: |
          cd supertokens-root
          TESTS="${{ steps.discover.outputs.test_classes }}"
          TOTAL_TESTS=$(echo "$TESTS" | wc -l)
          CHUNK_SIZE=$(( (TOTAL_TESTS + 4) / 5 ))
          START=$(( ${{ matrix.chunk }} * CHUNK_SIZE + 1 ))
          END=$(( START + CHUNK_SIZE - 1 ))
          CHUNK_TESTS=$(echo "$TESTS" | sed -n "${START},${END}p" | tr '\n' ',' | sed 's/,$//')
          if [ ! -z "$CHUNK_TESTS" ]; then
            ./gradlew test --tests "${CHUNK_TESTS}"
          fi
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          detailed_summary: true
          include_passed: false
          annotate_notice: false
